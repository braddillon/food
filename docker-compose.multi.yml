version: '3'

services:
  probe:
    image: trolleksii/ansible_db_probe
    depends_on:
      - food_db
    environment:
      - PROBE_HOST=food_db
      - PROBE_PORT=5432

  food_db:
    image: postgres
    container_name: food_db
    restart: always
    env_file:
      - ./food.env
    expose:
      - 5432
    volumes:
      - ./db:/var/lib/postgresql/data/

  food-backend:
    build: './backend'
    container_name: food_backend
    working_dir: /app
    env_file:
      - ./food.env
    command: >
      sh -c "python manage.py collectstatic --noinput
      && cp -Rf /app/static/* /static
      && cp -Rf /app/media/* /media
      && python manage.py migrate
      && python manage.py init_admin 
      && gunicorn -w 5 --bind 0.0.0.0:8000 app.wsgi:application"
#      && tail -F /dev/null"
#      && python manage.py runserver 0.0.0.0:8000"
    expose:
      - "8000"
    volumes:
      - ./www/static/:/static
      - ./www/media/:/media
      - ./backend/foodrest:/app/
    depends_on:
      - food_db

  food_frontend:
    build: './frontend'
    container_name: food_frontend
    command: >
      sh -c "npm run build
      && cp -Rf /app/build/* /www"
    volumes:
       - ./www:/www
    depends_on:
      - food-backend

  food_nginx:
    image: nginx:latest
    container_name: food_nginx
    expose:
      - 80
    volumes:
      - ./nginx:/etc/nginx
      - ./www:/app
    env_file:
      - ./food.env
      - ./letsEncrypt.env
    depends_on:
      - food_frontend
    command: /bin/bash -c "envsubst '$$PRODUCTION_HOST' < /etc/nginx/conf.d/site.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"

networks:
  default:
    external:
      name: nginx-proxy
